
svmstruct_mrf Specific Options:
         --m module_name   ->  the module name, which is 'svmstruct_mrf'
		 --lm learning_method -> the learning method (default : objassoc):
								objassoc : the parsimonious model 
								nonassoc : the non associative model
		 --omf object_map_file -> the location of the object mapping file to be used
		 --amf attribute_map_file -> the location of the attribute mapping file
		 --cm classify_method -> the classification method used (default is sum1.IP):
								 sum1 : linear programing using the sum = 1 constraint
								 sum1.IP : use MIP solver using the sum = 1 constraint
								 qbpo : use qbpo method
								 qbpo.sum1.IP : solve using the qbpo method first and initialize the MIP solver with its solution
		 --am attribute_method -> if multiple labeling method is to be used (default false):
								  true: multiple labels for a single instance are allowed
								  false: only one label is allowed
		 
								 
Training and Classification scripts:

 run_sequential.sh : runs the learner and classifier for all the folds sequentially and agregates the metrics over all folds.
 run_parallel.sh : runs all the folds parallely and agregates the metrics over all folds. 
 

Data:
Home and Office data is present in the data/home and data/office folders respectively.

Files present in data directories:
1. data_nodefeats.txt : node features file.
	format: 
		- the header starts with @DATA on a new line, everything above it is ignored
      	- lines starting with # are treated as comments
		- data lines are the following fields which are tab separated: scene_number segment_number label feature1 feature2 .. feature<n>  
2. data_edgefeats.txt : edge features file.
	format: 
		- the header starts with @DATA on a new line, everything above it is ignored
      	- lines starting with # are treated as comments
		- data lines are the following fields which are tab separated: scene_number segment_1_number segment_2_number label_1 label_2 feature1 feature2 .. feature<n>  
3. labelmap.txt : mapping from the linenumber of labels.txt to the label number used by the classifer
4. home_objectMap.txt / office_objectMap.txt : the list of labels forming a object (one object per line)
5. initialize.sh : script to generate data files in the correct format 
6. filter.pl : removes the headers from the feature files.
7. normalize.m : normailzes the feature values
8. binfeats.m : bins the features into 10 bins
9. format.pl : reads the data_nodefeats.b.txt and data_edgefeats.b.txt files and generates the one datas_<n>.txt file per scene in the svmstruct input format.
10. clean.sh : cleaning script which removes all the files generated by initialize script and the learn/classify scripts.
11. fold directories : fold1, fold2, fold3, fold4 
each fold directory has the following files:
 1. test<n> : list of test scene data files in the n-th fold 
 2. train<n> : list of train scene data files in the n-th fold 
 3. models folder: the final model is saved here
 4. imodels folder: intermediate models are saved here
 5. logs folder: the model training logs are saved here
 6. pred folder: the classifier logs and output are saved here

NOTE: to change the folds the test<n> and train<n> files need to be changed.




Scripts to run:

Step1: run initialize.sh script inside each data directory
Step2: run run_parallel.sh or run_sequential.sh script to train the model and classify.
 


